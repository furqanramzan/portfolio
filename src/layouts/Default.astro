---
import { generateSocialImage } from 'astro-social-images';
import { SEO } from 'astro-seo';
import { pwaInfo } from 'virtual:pwa-info';
import { ViewTransitions } from 'astro:transitions';
import Header from '@/components/Header.astro';
import { type LinkKey, color, name, twitterUsername } from '@/utils/constants';

export interface Props {
  title: string;
  description: string;
  active: LinkKey;
}

const { title, description, active } = Astro.props;

const ogImage = generateSocialImage({
  backgroundColor: color,
  images: [
    {
      url: 'public/socials/logo.svg',
      attributes: { top: 475, left: 800 },
    },
  ],
  texts: [
    {
      content: name,
      attributes: { x: '55', y: '105', 'font-size': '70px', fill: '#ffffff' },
    },
    {
      content: title,
      attributes: { x: '50', y: '325', 'font-size': '40px', fill: '#ffffff' },
    },
  ],
});
---

<html lang="en">
  <head>
    <SEO
      titleTemplate={`%s | ${name}`}
      titleDefault={name}
      title={title}
      description={description}
      twitter={{
        creator: twitterUsername,
        card: 'summary',
        description,
        image: ogImage.url,
      }}
      openGraph={{
        basic: {
          title,
          type: 'A type.',
          image: ogImage.url,
        },
      }}
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="apple-touch-icon" href="/pwa-192x192.png" />
    <link rel="mask-icon" href="/favicon.svg" color={color} />
    <meta name="msapplication-TileColor" content={color} />
    <meta name="theme-color" content={color} />
    <ViewTransitions />
    <script src="/src/pwa.ts"></script>
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}
  </head>
  <body class="bg-gray-50 text-black dark:bg-gray-900 dark:text-white">
    <div
      class="mx-auto flex max-w-screen-2xl flex-col px-2 py-5 sm:px-5 2xl:px-0"
    >
      <Header active={active} />
      <slot />
    </div>
  </body>
</html>
