---
import { type CollectionEntry, getCollection, getEntry } from 'astro:content';
import { sortByDate, sortByOrder } from '@/utils/sort';
import BlogLayout from '@/layouts/Blog.astro';
import { getArticleSkills } from '@/utils/blog';
import Article from '@/components/Article.astro';
import SkillName from '@/components/SkillName.astro';

interface Props {
  skill: CollectionEntry<'skill'>;
}

export async function getStaticPaths() {
  const skills = await getArticleSkills();
  return skills.map((skill) => ({
    params: { slug: skill.slug },
    props: { skill },
  }));
}

const { skill } = Astro.props;

const content = await getEntry('page', 'category');
const articlesContent = await getEntry('page', 'articles');
const title = content.data.title.replaceAll('{skill}', skill.data.name);
const description = content.data.description.replaceAll(
  '{skill}',
  skill.data.name,
);
const ogdescription = content.data.ogdescription.replaceAll(
  '{skill}',
  skill.data.name,
);

const articles = sortByOrder(
  sortByDate(
    await getCollection('article', ({ data }) =>
      data.skills.some((x) => x.slug === skill.slug),
    ),
  ),
);
---

<BlogLayout
  title={title}
  description={description}
  ogdescription={ogdescription}
>
  <div class="flex flex-col gap-5">
    <h1 class="flex items-center text-2xl font-semibold">
      <SkillName skill={skill} />
    </h1>
    <div class="columns-2 gap-5">
      {
        articles.map((article) => (
          <Article detail={articlesContent.data.detail} article={article} />
        ))
      }
    </div>
  </div>
</BlogLayout>
