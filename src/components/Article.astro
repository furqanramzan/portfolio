---
import { type CollectionEntry, getEntries } from 'astro:content';
import { Image } from 'astro:assets';
import Icon from './Icon.astro';
import Skills from './Skills.astro';
import { sortByOrder } from '@/utils/sort';

interface Props {
  article: CollectionEntry<'article'>;
}

const { article } = Astro.props;
const skills = article.data.skills
  ? sortByOrder(await getEntries(article.data.skills))
  : [];

function formatDate(date: Date) {
  return new Intl.DateTimeFormat('en-GB', {
    day: '2-digit',
    month: 'long',
    year: 'numeric',
  }).format(date);
}
---

<div class="mb-5 w-full break-inside-avoid">
  <div class="flex flex-col gap-2 bg-gray-200 p-3 dark:bg-gray-800">
    <a href={`/article/${article.slug}`} class="flex">
      {
        article.data.image && (
          <Image
            class="w-full"
            src={article.data.image}
            alt={article.data.title}
          />
        )
      }
    </a>
    <div class="flex flex-col gap-2">
      {skills.length > 0 && <Skills skills={skills} />}
      <a href={`/article/${article.slug}`}>
        <h3
          class="text-xl font-semibold tracking-tight text-gray-900 dark:text-white"
        >
          {article.data.title}
        </h3>
      </a>
      <p class="text-gray-500 dark:text-gray-400">{article.data.description}</p>
      <div class="flex items-center justify-between">
        <span class="text-gray-500 dark:text-gray-400">
          {formatDate(article.data.date)}
        </span>

        <a
          href={`/article/${article.slug}`}
          class="flex items-center font-medium text-blue-600 hover:underline dark:text-blue-500"
        >
          Read more
          <Icon class="!h-4 !w-4" icon="material-symbols:arrow-right-rounded" />
        </a>
      </div>
    </div>
  </div>
</div>
